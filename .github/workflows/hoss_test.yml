# This is a test pipeline, that verifies and updates the associations in cmr
name: HOSS Test
# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  # First job in the workflow installs and verifies the software
  build:
    name: Test Execution
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Set environment variables
        run: |
          echo "UAT_OUTPUT_FILE=notebooks/output/uat_output_json.txt" >> $GITHUB_ENV
          echo "OPS_OUTPUT_FILE=notebooks/output/ops_output_json.txt" >> $GITHUB_ENV
          echo "OUTPUT_DIR=notebooks/output" >> $GITHUB_ENV
          echo "UAT_SUCCESS_FILE=uat_success.txt" >> $GITHUB_ENV
          echo "OPS_SUCCESS_FILE=ops_success.txt" >> $GITHUB_ENV
          echo "UAT_FAILURE_FILE=uat_fail.txt" >> $GITHUB_ENV
          echo "OPS_FAILURE_FILE=ops_fail.txt" >> $GITHUB_ENV
          echo "SLACK_REPORT_CONTENT=" >> $GITHUB_ENV
          echo "UMM_TOOL_NAME=sds/HOSS Geographic" >> $GITHUB_ENV
      - name: Set environment variables for notebook
        run: |
          echo "OPS_USERNAME=${{ secrets.EDL_USER }}" >> $GITHUB_ENV
          echo "OPS_PASSWORD=${{ secrets.EDL_PASS }}" >> $GITHUB_ENV
          echo "UAT_USERNAME=${{ secrets.EDL_USER }}" >> $GITHUB_ENV
          echo "UAT_PASSWORD=${{ secrets.EDL_PASS }}" >> $GITHUB_ENV
      - name: Create prerequisites
        run: |
          mkdir ${{ env.OUTPUT_DIR }}
          realpath ${{ env.OUTPUT_DIR }}
      - name: Install dependencies
        run: |
          pip3 install --upgrade pip
          pip3 install git+https://github.com/nasa/harmony-py.git
          pip3 install papermill
          pip3 install xarray
          pip3 install jupyter
          pip3 install matplotlib
          pip3 install netCDF4
          pip3 install git+https://github.com/podaac/cmr-umm-updater.git
          pip3 install git+https://github.com/podaac/cmr-association-diff.git@6193079a14e36f4c9526aa426015c2b6be41f0e2
          pip3 install git+https://github.com/podaac/l2ss-py.git
          pip3 install python-dateutil --upgrade
      - name: Run CMR Association diff scripts
        run: |
          cmr_association_diff -e uat -t service -a "cmr/uat_associations.txt" -p EEDTEST -n '${{ env.UMM_TOOL_NAME }}' -o ${{ env.UAT_OUTPUT_FILE }} --token ${{ secrets.LAUNCHPAD_TOKEN_UAT }}
          cmr_association_diff -e ops -t service -a "cmr/ops_associations.txt" -p XYZ_PROV -n '${{ env.UMM_TOOL_NAME }}' -o ${{ env.OPS_OUTPUT_FILE }} --token ${{ secrets.LAUNCHPAD_TOKEN_OPS }}
      - name: Run Jupyter notebooks
        run: |
          python3 "notebook_test.py" -n "notebooks/hoss_collection_test.ipynb" -e uat -i ${{ env.UAT_OUTPUT_FILE }} -o ${{ env.OUTPUT_DIR }} --token ${{ secrets.LAUNCHPAD_TOKEN_UAT }}
          python3 "notebook_test.py" -n "notebooks/hoss_collection_test.ipynb" -e ops -i ${{ env.OPS_OUTPUT_FILE }} -o ${{ env.OUTPUT_DIR }} --token ${{ secrets.LAUNCHPAD_TOKEN_OPS }}
      - name: wget
      uses: wei/wget@v1
      with:
        args: -qO- https://archive.podaac.earthdata.nasa.gov/podaac-ops-cumulus-protected/SMAP_JPL_L3_SSS_CAP_8DAY-RUNNINGMEAN_V5/2022/260/SMAP_L3_SSS_20220921_8DAYS_V5.0.nc
      - name: Step 3 - Use the Upload Artifact GitHub Action
        uses: actions/upload-artifact@v2
        with: 
          name: assets-for-download
          path: /home/runner/work/hoss-tests/
